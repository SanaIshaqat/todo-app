{"version":3,"sources":["hooks/form.js","context/settings/settings.js","components/List.js","components/Form.js","components/Completed.js","components/todo.js","context/settings/Form.js","context/settings/loginContext.js","components/Header.js","components/Footer.js","components/login.js","components/auth.js","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","reset","settingsContext","React","createContext","settings","props","itemsPerPage","setItemsPerPage","sort","setSort","state","show","setShow","useEffect","stringArray","localStorage","getItem","objectArray","JSON","parse","Number","clear","Provider","children","List","useContext","currentPage","setCurrentPage","list","incomplete","slice","activeList","setactiveList","Math","ceil","length","pagesNum","setPagesNum","start","end","changePage","pageNum","Pages","pagesArr","push","class","type","onClick","i","className","console","log","map","item","interactive","elevation","Elevation","THREE","text","assignee","difficulty","complete","toggleComplete","id","toString","deleteItem","intent","Form","onSubmit","labelFor","labelInfo","onChange","placeholder","defaultValue","min","max","completed","Completecard","arrayComplete","ToDo","setList","setIncomplete","uuid","handleSubmit2","completedItem","setComplete","setArrayComplete","changeSet","setChangeSetting","items","incompleteCount","filter","document","title","arr","ele","changeSettingContext","FormSetting","changeNumberOfpage","e","obj","setItem","stringify","label","helperText","LoginContext","LoginProvider","LoggedIn","setLoggedIn","email","capabilities","user","setUser","loginFunction","username","password","a","superagent","post","set","base64","encode","response","validateMyToken","body","token","jwt","decode","cookie","save","myTokenCookie","load","logoutFunction","remove","can","capability","includes","Header","context","Group","Heading","Divider","href","icon","Footer","login","setState","condition","this","userName","Component","contextType","Auth","isLoggedIn","doHaveCapabilities","App","exact","path","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.926bdb7f.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n    event.target.reset();\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","// import React, { Component } from 'react';\n// export const settingsContext = React.createContext();\n\n// export default class settings extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       itemsPerPage: 2,\n//       sort: 'Ascending',\n//       show: true, \n//     };\n//   }\n\n//   render() {\n//     return (\n//       <settingsContext.Provider value={this.state}>\n//         {this.props.children}\n//       </settingsContext.Provider>\n//     );\n//   }\n// }\n\nimport React, { useState, useEffect } from 'react';\nexport const settingsContext = React.createContext();\n\nexport default function settings(props) {\n  const [itemsPerPage, setItemsPerPage] = useState(2);\n  const [sort, setSort] = useState('Ascending');\n  const [show, setShow] = useState(false);\n\n  const state = { show, setShow, itemsPerPage, setItemsPerPage, sort, setSort, }; \n  useEffect(() => { let stringArray = localStorage.getItem(\"Form\"); \n  let objectArray = JSON.parse(stringArray); \n  if (objectArray) { setItemsPerPage(Number(objectArray.itemsPerPage)); } \n  localStorage.clear(); }, []);\n\n  return <settingsContext.Provider value={state}>{props.children}</settingsContext.Provider>;\n}\n\n","import React, { useContext, useState, useEffect } from 'react';\nimport { settingsContext } from '../context/settings/settings';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\n\n\nexport default function List(props) {\n    const settings = useContext(settingsContext);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [activeList, setactiveList] = useState(\n      (settings.show ? props.list : props.incomplete).slice(\n        0, settings.itemsPerPage)\n    );\n    const [pagesNum, setPagesNum] = useState(\n      Math.ceil(props.list.length / settings.itemsPerPage)\n    );\n  \n    useEffect(() => {\n      setactiveList(\n        (settings.show ? props.list : props.incomplete).slice(\n          0,\n          settings.itemsPerPage\n        )\n      );\n\n      setPagesNum(\n        Math.ceil(\n          (settings.show ? props.list : props.incomplete).length /\n            settings.itemsPerPage\n        )\n      );\n    }, [props.list, props.incomplete]);\n  \n    useEffect(() => {\n      let start = (currentPage - 1) * settings.itemsPerPage;\n      let end = start + settings.itemsPerPage;\n      setactiveList(\n        (settings.show ? props.list : props.incomplete).slice(start, end)\n      );\n    }, [currentPage, settings.itemsPerPage]);\n  \n    const changePage = (pageNum) => {\n      if (pageNum !== currentPage) setCurrentPage(pageNum);\n    };\n  \n    const Pages = () => {\n      let pagesArr = [];\n      if (currentPage > 1) {\n        pagesArr.push(\n          <Button\n            class=\"@ns-button\"\n            type=\"button\"\n            onClick={() => {\n              changePage(currentPage - 1);\n            }}\n          >\n            previous\n          </Button>\n        );\n      }\n  \n      for (let i = 1; i <= pagesNum; i++) {\n        pagesArr.push(\n          <Button\n            class=\"@ns-button\"\n            type=\"button\"\n            onClick={() => {\n              changePage(i);\n            }}\n            key={i}\n          >\n            {i}\n          </Button>\n        );\n      }\n  \n      if (currentPage <= pagesNum) {\n        pagesArr.push(\n          <Button\n            class=\".bp3-active\"\n            type=\"button\"\n            onClick={() => {\n              changePage(currentPage + 1);\n            }}\n          >\n            next\n          </Button>\n        );\n      }\n     \n      return <div className=\"pages\"> {pagesArr} </div>;\n    };\n  \n    return (\n      <div>\n      \n        <Card className=\"mainItem2\">\n          <h3 className=\"list\">Items List</h3>\n          {console.log(activeList)}\n          {activeList.map((item) => (\n            <Card\n              className=\"listCard\"\n              interactive={true}\n              elevation={Elevation.THREE}\n              key={item.id}\n            >\n               \n              <h3>\n                <b>{item.text} </b>\n              </h3>\n              <p>\n                <b>Assigned to</b> : {item.assignee}\n              </p>\n              <p>\n                <b>Difficulty</b> : {item.difficulty}\n              </p>\n              <Button\n                class=\"@ns-button\"\n                type=\"button\"\n                // intent=\"danger\"\n                className={\n                  item.complete ? 'bp3-intent-success' : 'bp3-intent-danger'\n                }\n                onClick={() => props.toggleComplete(item.id)}\n              >\n                Complete : {item.complete.toString()}\n              </Button>\n              <Button  onClick={() => props.deleteItem(item.id)} type=\"submit\"  intent=\"danger\" text=\"delete\" />\n            </Card>\n          ))}\n        </Card>\n        <Pages />\n      </div>\n    );\n  }","import React from 'react';\nimport { Card, Button, FormGroup, InputGroup } from '@blueprintjs/core';\n\nexport default function Form(props) {\n  return (\n    <Card className=\"mainItem\" interactive={true}>\n      <h3 class=\"list\">Add A Task To Your List </h3>\n      <br></br>\n      <form onSubmit={props.handleSubmit}>\n        <FormGroup labelFor=\"text-input\" labelInfo=\"(required)\">\n          <label><b>To Do Item</b></label>\n          <br></br>\n          <br></br>\n          <InputGroup\n            onChange={props.handleChange}\n            name=\"text\"\n            id=\"text-input\"\n            placeholder=\"Item Details\"\n          />\n          <br></br>\n          <label><b>Assigned To</b></label>\n          <br></br>\n          <br></br>\n          <InputGroup\n            onChange={props.handleChange}\n            name=\"assignee\"\n            id=\"text-input\"\n            placeholder=\"Assignee Name\"\n          />\n          <br></br>\n          <div className='diff'>\n            <lable><b>Difficulty</b></lable>\n            <br></br>\n            <input\n              onChange={props.handleChange}\n              defaultValue={2}\n              type=\"range\"\n              min={1}\n              max={10}\n              name=\"difficulty\"\n            />\n          </div>\n          <div >\n            <Button className='button' type=\"submit\">Add Item</Button>\n          </div>\n\n          <Button className='button' type=\"submit\" onClick={props.completed}>\n          View Completed Items\n        </Button>\n        </FormGroup>\n      </form>\n    </Card>\n  );\n}","import React from \"react\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\n\nconst Completecard = (props) => {\n  return (\n    <div>\n      {\" \"}\n      <Card className=\"mainItem2\">\n        <h3 className=\"list\">Items List</h3>\n        {props.arrayComplete.map((item) => (\n          <Card\n            className=\"listCard\"\n            interactive={true}\n            elevation={Elevation.THREE}\n            key={item.id}\n          >\n            <h3>\n              <b>{item.text} </b>\n            </h3>\n            <p>\n              <b>Assigned to</b> : {item.assignee}\n            </p>\n            <p>\n              <b>Difficulty</b> : {item.difficulty}\n            </p>\n            <Button\n              class=\"@ns-button\"\n              type=\"button\"\n              // intent=\"danger\"\n              className={\n                 \"bp3-intent-success\" \n              }\n              onClick={() => props.toggleComplete(item.id)}\n            >\n              Complete : True\n            </Button>\n          </Card>\n        ))}\n      </Card>\n    </div>\n  );\n};\n\nexport default Completecard;","import React, { useEffect, useState } from 'react';\nimport useForm from '../hooks/form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport Form from './Form';\nimport Completecard from './Completed';\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit, handleSubmit2 } = useForm(addItem);\n  const [completedItem, setComplete] = useState(false);\n  const [arrayComplete, setArrayComplete] = useState([]);\n  const [changeSet, setChangeSetting] = useState(false);\n\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n  function changeSettingContext() {\n    setChangeSetting(true);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete);\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: (${incomplete.length}) Pending`;\n  }, [list]);\n\n  const completed=()=>{\n\n    const arr=[];\n    list.map((ele)=>{\n      if (ele.complete){\n        arr.push(ele)\n      }\n    });\n    setComplete(true);\n    setArrayComplete(arr);\n    console.log(arr);\n  }\n\n  return (\n    <div className=\"main\">\n      <h3 id='h2'>To Do List Manager: ({incomplete.length}) To-Do | ({list.length - incomplete.length}) completed</h3>\n\n      <div className=\"mainCards\">\n        <Form\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          incomplete={incomplete}\n          completed={completed}\n          changeSettingContext={changeSettingContext}\n        />\n        <List\n        deleteItem={deleteItem}\n          incomplete={incomplete}\n          list={list}\n          toggleComplete={toggleComplete}\n        />\n        {completedItem && (\n        <Completecard completed={completed} arrayComplete={arrayComplete} toggleComplete={toggleComplete} />\n      )}\n         {changeSet && (\n        <FormSetting handleSubmit={handleSubmit} handleChange={handleChange} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;","import React, { useContext, useState, useEffect } from 'react';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { settingsContext } from \"./settings\";\n\nexport default function Form() {\n  const settings = useContext(settingsContext);\n\n  // function handleChange(e) {\n  //   e.preventDefault();\n  //   if (e.target.name == 'items') {\n  //     settings.setItemsPerPage(e.target.value);\n  //     localStorage.setItem('items', e.target.value);\n  //     console.log(\"11111\",e.target.value);\n  //   }\n  //   if (e.target.name == 'completed') {\n  //     settings.setShow(e.target.value);\n  //     localStorage.setItem('completed', e.target.value);\n  //   }\n  // }\n  // useEffect(() => {\n  //   const items = parseInt(localStorage.getItem('items'));\n  //   const completed = localStorage.getItem('completed');\n  //   // console.log(\"BEFORE SET\",items);\n  //   settings.setItemsPerPage(items);\n  //   // console.log(\"ITEMS\",settings.itemsPerPage);\n  //   // console.log(\"000000\",items);\n  //   settings.setShow(completed);\n  //   localStorage.clear();\n  // }, []);\n\n \n\n  const changeNumberOfpage = (e) => {\n    e.preventDefault();\n    let itemsPerPage = e.target.value;\n    let obj = {\n      itemsPerPage: itemsPerPage,\n    };\n    setItem(obj);\n  };\n  function setItem(obj) {\n    localStorage.setItem(\"Form\", JSON.stringify(obj));\n  }\n\n\n\n  return (\n    <>\n      <div>\n        <h2>TO DO Settings : </h2>\n        <form>\n          <FormGroup label='Choose No. Of Items Displayed Per Page:' labelFor='text-input'>\n            <InputGroup id='text-input' placeholder='# of items/page' type='Number' onChange={changeNumberOfpage} name='items'min='1' max='10' />\n          </FormGroup>\n          <FormGroup helperText='' label='Show Completed :' labelFor='text-input' labelInfo=''>\n            <div className='bp3-html-select .modifier'>\n              <select name='completed' value={settings.show} onChange={changeNumberOfpage}>\n                <option value='true'>True</option>\n                <option value='false'>False</option>\n              </select>\n              <span className='bp3-icon bp3-icon-double-caret-vertical'></span>\n            </div>\n          </FormGroup>\n        </form>\n      </div>\n    </>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport superagent from 'superagent';\nimport base64 from 'base-64';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\nexport const LoginContext = React.createContext();\n\nexport default function LoginProvider(props) {\n\n    const API = 'https://small-project-401.herokuapp.com';\n    const [LoggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({ email: \"\", capabilities: [] });\n\n    user.capabilities = ['read', 'create', 'update', 'delete'];\n\n    const loginFunction = async (username, password) => {\n        try {\n            const response = await superagent.post(`${API}/signin`).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`);\n\n            validateMyToken(response.body.token);\n        } catch (err) { }\n\n    }\n    const logoutFunction = () => {\n        setLoggedIn(false);\n        setUser({});\n        cookie.remove('token');\n    }\n\n    const validateMyToken = (token) => {\n        if (token) {\n            const user = jwt.decode(token);\n            setLoggedIn(true);\n            setUser(user);\n            cookie.save('token', token);\n        } else {\n            setLoggedIn(false);\n            setUser({});\n        }\n    }\n    useEffect(() => {\n        const myTokenCookie = cookie.load('token');\n        validateMyToken(myTokenCookie);\n    }, []);\n\n    const can = (capability) => {\n        return user?.capabilities?.includes(capability);\n    }\n    const state = {\n        LoggedIn: LoggedIn,\n        loginFunction: loginFunction,\n        logoutFunction: logoutFunction,\n        user: user,\n        can: can\n    }\n    return (\n        <LoginContext.Provider value={state}>\n            {props.children}\n        </LoginContext.Provider>\n    )\n}\n","import React from 'react';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\nimport { LoginContext } from \"../context/settings/loginContext\";\nimport { useContext} from 'react';\nexport default function Header() {\n    const context = useContext(LoginContext)\n    return (\n        <>\n        <Navbar className=\"header\">\n        <br></br>\n        <Navbar.Group top-margin={10 }>\n            <Navbar.Heading ><h2>To-Do List App</h2></Navbar.Heading>\n            <Navbar.Divider />\n            <a href=\"/todo-app\">\n            <Button className=\"bp4-minimal\" icon=\"home\" text=\"Home\" />\n            </a>\n            <a href='/settings'>\n            <Button className=\"bp4-minimal\" icon=\"settings\" text=\"Settings\" />\n            </a>\n            <Button onClick={context.logoutFunction} className=\"bp4-minimal\" icon=\"log-out\" text=\"LogOut\"/>       \n        </Navbar.Group>\n    </Navbar>\n    </>\n    );\n  }\n\n","import React from 'react';\n\nfunction Footer(){\n    return <footer>&copy; SanaIshaqat-2021</footer>;\n}\n\n\nexport default Footer;","import React from \"react\";\nimport { LoginContext } from \"../context/settings/loginContext\";\nimport { When } from 'react-if';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\nexport default class login extends React.Component {\n\n    static contextType = LoginContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n    }\n    // handleUsername = (e) => {\n    //     this.setState({ username: e.target.value })\n    // }\n\n    // handlePassword = (e) => {\n    //     this.setState({ password: e.target.value })\n    // }\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.context.loginFunction(this.state.username, this.state.password);\n    }\n    render() {\n        return (\n            <>\n                <When condition={!this.context.LoggedIn}>\n                    <form onSubmit={this.handleSubmit}>\n                        <input placeholder=\"username\" type='text' name='username' onChange={this.handleChange} />\n                        <input placeholder=\"password\" type='password' name='password' onChange={this.handleChange} />\n                        <Button type=\"submit\" className=\"bp4-minimal\" icon=\"log-in\" text=\"LogIn\"/>                 \n                    </form>\n                </When>\n                <When condition={this.context.LoggedIn}>\n                    <div>\n                        {this.context.user.userName}\n                    </div>\n                    {/* <Button onClick={this.context.logoutFunction}className=\"bp4-minimal\" icon=\"log-out\" text=\"LogOut\"/> */}\n                    {/* <button onClick={this.context.logoutFunction}>logout</button> */}\n                </When>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport { LoginContext } from '../context/settings/loginContext';\nimport { When } from 'react-if';\nexport default class Auth extends React.Component {\n    static contextType = LoginContext;\n    render() {\n        const isLoggedIn = this.context.LoggedIn;\n        const doHaveCapabilities = this.context.can(this.props.capability);\n        return (\n            <When condition={isLoggedIn && doHaveCapabilities}>\n                {this.props.children}\n            </When>\n        )\n    }\n}","import React from 'react';\nimport ToDo from './components/todo';\nimport SettingsContext from './context/settings/settings';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from './context/settings/Form';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './app.scss';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Completecard from './components/Completed';\nimport LoginProvider from \"./context/settings/loginContext\";\nimport Login from './components/login';\nimport Auth from './components/auth';\n\nfunction App() {\n  return (\n    <>\n      <LoginProvider>\n        <Login />\n        <Auth capability=\"read\">\n          <Router>\n            <Header />\n            <Switch>\n              <SettingsContext>\n                <Route exact path='/todo-app'>\n                  <ToDo />\n                </Route>\n                <Route exact path='/settings'>\n                  <Form />\n                </Route>\n                {/* <Auth capability=\"create\">\n                  <button>create</button>\n                </Auth>\n                <Auth capability=\"update\">\n                  <button>update</button>\n                </Auth>\n                <Auth capability=\"delete\">\n                  <button>delete</button>\n                </Auth> */}\n              </SettingsContext>\n            </Switch>\n            <Footer />\n          </Router>\n        </Auth>\n      </LoginProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}