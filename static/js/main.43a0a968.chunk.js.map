{"version":3,"sources":["hooks/form.js","context/settings/settings.js","components/List.js","components/Form.js","components/todo.js","components/Header.js","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","reset","settingsContext","React","createContext","settings","props","state","itemsPerPage","sort","show","Provider","this","children","Component","List","useContext","currentPage","setCurrentPage","list","incomplete","slice","activeList","setactiveList","Math","ceil","length","pagesNum","setPagesNum","useEffect","console","log","start","end","changePage","pageNum","Pages","pagesArr","push","class","type","onClick","i","className","map","item","interactive","elevation","Elevation","THREE","text","assignee","difficulty","complete","toggleComplete","id","toString","Form","onSubmit","labelFor","labelInfo","onChange","placeholder","defaultValue","min","max","ToDo","setList","setIncomplete","uuid","incompleteCount","filter","document","title","items","Header","Group","align","Alignment","LEFT","Heading","Divider","icon","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.43a0a968.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n    event.target.reset();\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { Component } from 'react';\nexport const settingsContext = React.createContext();\n\nexport default class settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n \n      itemsPerPage: 4,\n      sort: 'Ascending',\n      show: true,\n      \n    };\n  }\n\n  render() {\n    return (\n      <settingsContext.Provider value={this.state}>\n        {this.props.children}\n      </settingsContext.Provider>\n    );\n  }\n}","import React, { useContext, useState, useEffect } from 'react';\nimport { settingsContext } from '../context/settings/settings';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\n\n\nexport default function List(props) {\n    const settings = useContext(settingsContext);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [activeList, setactiveList] = useState(\n      (settings.show ? props.list : props.incomplete).slice(\n        0, settings.itemsPerPage)\n    );\n    const [pagesNum, setPagesNum] = useState(\n      Math.ceil(props.list.length / settings.itemsPerPage)\n    );\n  \n    useEffect(() => {\n      setactiveList(\n        (settings.show ? props.list : props.incomplete).slice(\n          0,\n          settings.itemsPerPage\n        )\n      );\n      console.log(activeList);\n      setPagesNum(\n        Math.ceil(\n          (settings.show ? props.list : props.incomplete).length /\n            settings.itemsPerPage\n        )\n      );\n    }, [props.list, props.incomplete]);\n  \n    useEffect(() => {\n      let start = (currentPage - 1) * settings.itemsPerPage;\n      let end = start + settings.itemsPerPage;\n      setactiveList(\n        (settings.show ? props.list : props.incomplete).slice(start, end)\n      );\n    }, [currentPage, settings.itemsPerPage]);\n  \n    const changePage = (pageNum) => {\n      if (pageNum !== currentPage) setCurrentPage(pageNum);\n      console.log(currentPage);\n    };\n  \n    const Pages = () => {\n      let pagesArr = [];\n      if (currentPage > 1) {\n        pagesArr.push(\n          <Button\n            class=\"@ns-button\"\n            type=\"button\"\n            onClick={() => {\n              changePage(currentPage - 1);\n            }}\n          >\n            previous\n          </Button>\n        );\n      }\n  \n      for (let i = 1; i <= pagesNum; i++) {\n        pagesArr.push(\n          <Button\n            class=\"@ns-button\"\n            type=\"button\"\n            onClick={() => {\n              changePage(i);\n            }}\n            key={i}\n          >\n            {i}\n          </Button>\n        );\n      }\n  \n      if (currentPage <= pagesNum) {\n        pagesArr.push(\n          <Button\n            class=\".bp3-active\"\n            type=\"button\"\n            onClick={() => {\n              changePage(currentPage + 1);\n            }}\n          >\n            next\n          </Button>\n        );\n      }\n  \n      return <div className=\"butns\"> {pagesArr} </div>;\n    };\n  \n    return (\n      <div>\n        <Card className=\"mainItem2\">\n          <h3 className=\"list\">Items List</h3>\n          {activeList.map((item) => (\n            <Card\n              className=\"listCard\"\n              interactive={true}\n              elevation={Elevation.THREE}\n              key={item.id}\n            >\n              <h3>\n                <b>{item.text} </b>\n              </h3>\n              <p>\n                <b>Assigned to</b> : {item.assignee}\n              </p>\n              <p>\n                <b>Difficulty</b> : {item.difficulty}\n              </p>\n              <Button\n                class=\"@ns-button\"\n                type=\"button\"\n                // intent=\"danger\"\n                className={\n                  item.complete ? 'bp3-intent-success' : 'bp3-intent-danger'\n                }\n                onClick={() => props.toggleComplete(item.id)}\n              >\n                Complete : {item.complete.toString()}\n              </Button>\n            </Card>\n          ))}\n        </Card>\n        <Pages />\n      </div>\n    );\n  }","import React from 'react';\nimport { Card, Button, FormGroup, InputGroup } from '@blueprintjs/core';\n\nexport default function Form({ handleSubmit, handleChange }) {\n  return (\n    <Card className=\"mainItem\">\n      <h3>Add To Do Item to the List </h3>\n      <form onSubmit={handleSubmit}>\n        <FormGroup labelFor=\"text-input\" labelInfo=\"(required)\">\n          <label>To Do Item</label>\n          <InputGroup\n            onChange={handleChange}\n            name=\"text\"\n            id=\"text-input\"\n            placeholder=\"Item Details\"\n          />\n          <label>Assigned To</label>\n          <InputGroup\n            onChange={handleChange}\n            name=\"assignee\"\n            id=\"text-input\"\n            placeholder=\"Assignee Name\"\n          />\n          <div className='Difficulty'>\n          <lable>Difficulty</lable>\n          <input\n\n            onChange={handleChange}\n            defaultValue={1}\n            type=\"range\"\n         \n            min={1}\n            max={5}\n            name=\"difficulty\"\n          />\n          </div>\n<div >\n          <Button className='button' type=\"submit\">Add Item</Button>\n          </div>\n        </FormGroup>\n      </form>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport useForm from '../hooks/form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport Form from './Form';\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    console.log(item);\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete);\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete.length}`;\n  }, [list]);\n\n  return (\n    <div className=\"mainsec\">\n      <h2 id='h2'>To Do List: {incomplete.length} items pending </h2>\n\n      <div className=\"mainCards\">\n        <Form\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n        <List\n          incomplete={incomplete}\n          list={list}\n          toggleComplete={toggleComplete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;","import React from 'react';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\n\nexport default function Header() {\n    return (\n        <>\n        <Navbar className=\"header\">\n        <Navbar.Group align={Alignment.LEFT}>\n            <Navbar.Heading className=\"title\"><h2>To-Do List App</h2></Navbar.Heading>\n            <Navbar.Divider />\n            <Button className=\"bp4-minimal\" icon=\"list\" text=\"Home\" />\n        </Navbar.Group>\n    </Navbar>\n    </>\n    );\n  }\n\n","import React from 'react';\nimport ToDo from './components/todo';\nimport SettingsContext from './context/settings/settings';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Header from './components/Header';\n\nimport './app.scss';\n\nfunction App() {\n    return (\n      <>\n         <SettingsContext>\n          <Header />\n          <ToDo />\n        </SettingsContext>\n      </>\n    );\n  }\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}